import React, { useLayoutEffect,useRef } from 'react';
import { Link, useNavigate, useParams } from 'react-router-dom';
import { breedList } from '../../assets/breedsList';
import { Breed } from '../home/home';
import home from '../../assets/home.svg';
import about from '../../assets/about.svg';
import faqs from '../../assets/faqs.svg';
import random from '../../assets/random.svg';
import backArrow from '../../assets/backArrow.svg';
import styles from './nav.module.scss';
import gsap from 'gsap';

export function Nav(){
    const {id} = useParams();
    const t1 = useRef<gsap.core.Timeline|undefined>();
    const nav = useNavigate();
    const prevId = useRef<string|undefined>()

    /**
     * 
     * // [min,max]
     * @param {number} min - beginning of the range of numbers
     * @param {number} max - end of the range of numbers
     * @returns whole number
     */
   
    const genRand = (min:number = 0, max:number) => {
        return Math.round(Math.random() * (max - min) + min)
    }

    function setT1(){
        function handleReverse(){
            gsap.fromTo("#defaultNav",{
                translateY:"-100%",
                visibility:"hidden"
            },{
                duration:0.3,
                translateY:"0%",
                borderBottom:"2px solid black",
                visibility:"visible",
                display:"flex",
            })
        }
        function handleStart(){
            gsap.to("#defaultNav",{
                duration:0.5,
                translateY:"-100%",
                onComplete:()=>{
                    gsap.set("#defaultNav",{display:"none"})
                },
            })
        }
        const timeline:gsap.core.Timeline = gsap.timeline({onStart:handleStart,onReverseComplete: handleReverse});
        timeline.set("#defaultNav",{
            translateY:"-100%",
            visibility:"hidden",
        })
        timeline.set("#alternateNav",{
            translateY:"0%",
            visibility:"visible"
        })
        timeline.fromTo("#backArrow",{
            opacity:0,
            xPercent:100,
        },{
            duration:0.3,
            xPercent:0,
            opacity:1
        },0.1)
        let navLinks = gsap.utils.toArray(`.${styles.iconList} li`)
        timeline.to(navLinks,{
            duration:0.3,
            opacity:1,
            translateY:"0%",
            stagger:0.1,
            ease: "back.out(2)"
        },0.1)
        t1.current = timeline;
    }

    
    function findId(obj:Breed){
        return obj.breed === id
    }

    const handleClick = () => {
 
        let randomBreed = breedList[genRand(0,breedList.length-1)].breed
        while(randomBreed.toLowerCase() === id?.toLowerCase()) randomBreed = breedList[genRand(0,breedList.length-1)].breed
        // window.history.pushState({},'',`/${randomBreed}`);
        nav(`/${randomBreed}`)
    }

    const chooseRandomBreed = () => {
        let randomBreed = breedList[genRand(0,breedList.length-1)].breed
        while(randomBreed.toLowerCase() === id?.toLowerCase()) randomBreed = breedList[genRand(0,breedList.length-1)].breed
        return randomBreed
    }

    const handleBackArrow = () => {
        if(window.scrollY === 0) {
            nav("/");
            return;
        }
        gsap.to(window,{
           onComplete:()=>{nav("/");},
           scrollTo:{
            y:0,
           } 
        })
        
    }

    const handleMobile = () => {
        const defaultNav = document.querySelector<HTMLDivElement>("#defaultNav")!;
        defaultNav.classList.toggle(styles.active)
        
    }
    
    useLayoutEffect(()=>{
        const defaultNav = document.querySelector<HTMLDivElement>("#defaultNav")!;
        document.documentElement.style.setProperty("--navHeight", `${defaultNav.getBoundingClientRect().height}px`)
        setT1();
        
    },[])
    
    useLayoutEffect(()=>{
        if(breedList.find(findId)?.imgUrl !== undefined){
            t1.current?.play();
        }
        else {
            t1.current?.reverse();
        }
        prevId.current = id;
    },[id])

    return(
        <nav id="navBar" className={styles.navbar}>
            <div id="alternateNav" className={styles.alternate}>
                <img id="backArrow" className={styles.backArrow} onClick={handleBackArrow} src={backArrow} alt="" />
                <ul className={styles.iconList}>
                    <li><Link to="/"><img src={home} alt="" /></Link></li>
                    <li><Link to="/About"><img src={about} alt="" /></Link></li>
                    <li><Link to="/FAQ"><img src={faqs} alt="" /></Link></li>
                    <li><Link to={`/${chooseRandomBreed()}`} target="_top"><img src={random} alt="" /></Link></li>
                </ul>

            </div>

            <div id="defaultNav" className={styles.default}>
                <svg className={styles.icon} width="127" height="45" viewBox="0 0 127 45" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M28.125 5.625C29.6168 5.625 31.0476 6.21763 32.1025 7.27252C33.1574 8.32742 33.75 9.75816 33.75 11.25C34.675 11.2498 35.5858 11.4777 36.4017 11.9136C37.2176 12.3495 37.9134 12.9798 38.4275 13.7488C38.9416 14.5178 39.2581 15.4017 39.349 16.3222C39.4399 17.2428 39.3024 18.1715 38.9486 19.0262C38.5948 19.8809 38.0358 20.6352 37.3209 21.2222C36.606 21.8092 35.7574 22.2109 34.8502 22.3916C33.943 22.5723 33.0053 22.5265 32.12 22.2583C31.2347 21.99 30.4293 21.5076 29.775 20.8537L20.8537 29.775C21.4976 30.4194 21.9753 31.2105 22.2459 32.0803C22.5164 32.9502 22.5716 33.8727 22.4068 34.7686C22.242 35.6645 21.862 36.507 21.2996 37.2236C20.7373 37.9402 20.0092 38.5095 19.1782 38.8825C18.3472 39.2556 17.438 39.4212 16.5288 39.3652C15.6196 39.3092 14.7376 39.0332 13.9586 38.561C13.1796 38.0887 12.527 37.4344 12.0568 36.6542C11.5866 35.874 11.313 34.9912 11.2594 34.0819L11.25 33.75L10.92 33.7406C10.0103 33.6873 9.1272 33.4138 8.34663 32.9436C7.56606 32.4734 6.91141 31.8206 6.43899 31.0414C5.96658 30.2622 5.69055 29.3798 5.63465 28.4703C5.57875 27.5608 5.74465 26.6513 6.11809 25.8201C6.49153 24.9889 7.06131 24.2608 7.77843 23.6986C8.49554 23.1364 9.33852 22.7568 10.2348 22.5924C11.1311 22.4281 12.0539 22.4841 12.9239 22.7554C13.7938 23.0267 14.5848 23.5053 15.2287 24.15L24.15 15.2287C23.363 14.4423 22.827 13.4401 22.6096 12.349C22.3922 11.2579 22.5033 10.1268 22.9288 9.09879C23.3543 8.0708 24.0751 7.19207 25 6.57373C25.9249 5.9554 27.0124 5.62524 28.125 5.625V5.625Z" fill="#D9D9D9" stroke="#131525" strokeWidth="3" strokeLinecap="round" strokeLinejoin="round"/>
                    <path d="M54.9545 31.5H48.7933V13.3182H55.0788C56.884 13.3182 58.4347 13.6822 59.7308 14.4102C61.0329 15.1322 62.0331 16.1709 62.7315 17.5263C63.4299 18.8816 63.7791 20.5033 63.7791 22.3913C63.7791 24.2853 63.427 25.9129 62.7227 27.2741C62.0243 28.6354 61.0152 29.68 59.6953 30.408C58.3814 31.136 56.8011 31.5 54.9545 31.5ZM52.087 28.6502H54.7947C56.0613 28.6502 57.1178 28.4194 57.9641 27.9577C58.8105 27.4902 59.4467 26.7947 59.8729 25.8714C60.299 24.9422 60.5121 23.7822 60.5121 22.3913C60.5121 21.0005 60.299 19.8464 59.8729 18.929C59.4467 18.0057 58.8164 17.3162 57.9819 16.8604C57.1533 16.3988 56.1235 16.168 54.8924 16.168H52.087V28.6502ZM72.7147 31.7663C71.383 31.7663 70.2289 31.4734 69.2523 30.8874C68.2757 30.3015 67.5182 29.4818 66.9796 28.4283C66.4469 27.3748 66.1806 26.1437 66.1806 24.7351C66.1806 23.3265 66.4469 22.0924 66.9796 21.033C67.5182 19.9736 68.2757 19.1509 69.2523 18.565C70.2289 17.979 71.383 17.6861 72.7147 17.6861C74.0463 17.6861 75.2005 17.979 76.177 18.565C77.1536 19.1509 77.9082 19.9736 78.4409 21.033C78.9795 22.0924 79.2488 23.3265 79.2488 24.7351C79.2488 26.1437 78.9795 27.3748 78.4409 28.4283C77.9082 29.4818 77.1536 30.3015 76.177 30.8874C75.2005 31.4734 74.0463 31.7663 72.7147 31.7663ZM72.7324 29.1918C73.4545 29.1918 74.0582 28.9935 74.5435 28.5969C75.0288 28.1945 75.3899 27.6559 75.6266 26.9812C75.8693 26.3065 75.9906 25.5548 75.9906 24.7262C75.9906 23.8917 75.8693 23.1371 75.6266 22.4624C75.3899 21.7817 75.0288 21.2402 74.5435 20.8377C74.0582 20.4353 73.4545 20.234 72.7324 20.234C71.9926 20.234 71.3771 20.4353 70.8858 20.8377C70.4005 21.2402 70.0365 21.7817 69.7939 22.4624C69.5571 23.1371 69.4387 23.8917 69.4387 24.7262C69.4387 25.5548 69.5571 26.3065 69.7939 26.9812C70.0365 27.6559 70.4005 28.1945 70.8858 28.5969C71.3771 28.9935 71.9926 29.1918 72.7324 29.1918ZM87.9069 36.8977C86.7528 36.8977 85.7614 36.7409 84.9328 36.4272C84.1042 36.1194 83.4384 35.7051 82.9353 35.1843C82.4322 34.6635 82.083 34.0864 81.8877 33.4531L84.7819 32.7518C84.9121 33.0181 85.1015 33.2815 85.3501 33.5419C85.5986 33.8082 85.933 34.0272 86.3532 34.1989C86.7794 34.3764 87.315 34.4652 87.9601 34.4652C88.8716 34.4652 89.6262 34.2433 90.224 33.7994C90.8218 33.3614 91.1206 32.6393 91.1206 31.6332V29.0497H90.9608C90.7951 29.3812 90.5525 29.7215 90.2329 30.0707C89.9192 30.4199 89.5019 30.7128 88.9811 30.9496C88.4662 31.1863 87.8181 31.3047 87.0368 31.3047C85.9893 31.3047 85.0393 31.0591 84.1871 30.5678C83.3407 30.0707 82.666 29.3308 82.1629 28.3484C81.6657 27.36 81.4172 26.123 81.4172 24.6374C81.4172 23.14 81.6657 21.8764 82.1629 20.8466C82.666 19.8108 83.3437 19.0266 84.1959 18.494C85.0482 17.9554 85.9981 17.6861 87.0457 17.6861C87.8447 17.6861 88.5017 17.8222 89.0166 18.0945C89.5374 18.3608 89.9517 18.6834 90.2595 19.0621C90.5673 19.435 90.801 19.7872 90.9608 20.1186H91.1384V17.8636H94.3078V31.7219C94.3078 32.8879 94.0296 33.8526 93.4733 34.6161C92.9169 35.3796 92.1564 35.9508 91.1917 36.3295C90.2269 36.7083 89.132 36.8977 87.9069 36.8977ZM87.9335 28.7834C88.6141 28.7834 89.1942 28.6177 89.6736 28.2862C90.153 27.9548 90.517 27.4783 90.7655 26.8569C91.0141 26.2354 91.1384 25.4897 91.1384 24.6197C91.1384 23.7615 91.0141 23.0098 90.7655 22.3647C90.5229 21.7196 90.1618 21.2195 89.6824 20.8643C89.209 20.5033 88.626 20.3228 87.9335 20.3228C87.2174 20.3228 86.6196 20.5092 86.1402 20.8821C85.6608 21.255 85.2997 21.7669 85.0571 22.418C84.8144 23.0631 84.6931 23.797 84.6931 24.6197C84.6931 25.4542 84.8144 26.1851 85.0571 26.8125C85.3057 27.4339 85.6697 27.9193 86.1491 28.2685C86.6344 28.6117 87.2292 28.7834 87.9335 28.7834ZM103.532 36.8977C102.378 36.8977 101.386 36.7409 100.558 36.4272C99.7292 36.1194 99.0634 35.7051 98.5603 35.1843C98.0572 34.6635 97.708 34.0864 97.5127 33.4531L100.407 32.7518C100.537 33.0181 100.726 33.2815 100.975 33.5419C101.224 33.8082 101.558 34.0272 101.978 34.1989C102.404 34.3764 102.94 34.4652 103.585 34.4652C104.497 34.4652 105.251 34.2433 105.849 33.7994C106.447 33.3614 106.746 32.6393 106.746 31.6332V29.0497H106.586C106.42 29.3812 106.177 29.7215 105.858 30.0707C105.544 30.4199 105.127 30.7128 104.606 30.9496C104.091 31.1863 103.443 31.3047 102.662 31.3047C101.614 31.3047 100.664 31.0591 99.8121 30.5678C98.9657 30.0707 98.291 29.3308 97.7879 28.3484C97.2907 27.36 97.0422 26.123 97.0422 24.6374C97.0422 23.14 97.2907 21.8764 97.7879 20.8466C98.291 19.8108 98.9687 19.0266 99.8209 18.494C100.673 17.9554 101.623 17.6861 102.671 17.6861C103.47 17.6861 104.127 17.8222 104.642 18.0945C105.162 18.3608 105.577 18.6834 105.884 19.0621C106.192 19.435 106.426 19.7872 106.586 20.1186H106.763V17.8636H109.933V31.7219C109.933 32.8879 109.655 33.8526 109.098 34.6161C108.542 35.3796 107.781 35.9508 106.817 36.3295C105.852 36.7083 104.757 36.8977 103.532 36.8977ZM103.559 28.7834C104.239 28.7834 104.819 28.6177 105.299 28.2862C105.778 27.9548 106.142 27.4783 106.391 26.8569C106.639 26.2354 106.763 25.4897 106.763 24.6197C106.763 23.7615 106.639 23.0098 106.391 22.3647C106.148 21.7196 105.787 21.2195 105.307 20.8643C104.834 20.5033 104.251 20.3228 103.559 20.3228C102.842 20.3228 102.245 20.5092 101.765 20.8821C101.286 21.255 100.925 21.7669 100.682 22.418C100.439 23.0631 100.318 23.797 100.318 24.6197C100.318 25.4542 100.439 26.1851 100.682 26.8125C100.931 27.4339 101.295 27.9193 101.774 28.2685C102.259 28.6117 102.854 28.7834 103.559 28.7834ZM119.175 31.7663C117.843 31.7663 116.689 31.4734 115.712 30.8874C114.736 30.3015 113.978 29.4818 113.44 28.4283C112.907 27.3748 112.641 26.1437 112.641 24.7351C112.641 23.3265 112.907 22.0924 113.44 21.033C113.978 19.9736 114.736 19.1509 115.712 18.565C116.689 17.979 117.843 17.6861 119.175 17.6861C120.506 17.6861 121.66 17.979 122.637 18.565C123.614 19.1509 124.368 19.9736 124.901 21.033C125.439 22.0924 125.709 23.3265 125.709 24.7351C125.709 26.1437 125.439 27.3748 124.901 28.4283C124.368 29.4818 123.614 30.3015 122.637 30.8874C121.66 31.4734 120.506 31.7663 119.175 31.7663ZM119.192 29.1918C119.914 29.1918 120.518 28.9935 121.003 28.5969C121.489 28.1945 121.85 27.6559 122.087 26.9812C122.329 26.3065 122.451 25.5548 122.451 24.7262C122.451 23.8917 122.329 23.1371 122.087 22.4624C121.85 21.7817 121.489 21.2402 121.003 20.8377C120.518 20.4353 119.914 20.234 119.192 20.234C118.453 20.234 117.837 20.4353 117.346 20.8377C116.86 21.2402 116.496 21.7817 116.254 22.4624C116.017 23.1371 115.899 23.8917 115.899 24.7262C115.899 25.5548 116.017 26.3065 116.254 26.9812C116.496 27.6559 116.86 28.1945 117.346 28.5969C117.837 28.9935 118.453 29.1918 119.192 29.1918Z" fill="black"/>
                </svg>
                <button className={styles.burger} onClick={handleMobile}>
                    <div></div>
                    <div></div>
                </button>
                <ul className={styles.navLinks}>
                    <li className={styles.link}><Link to="/">Home</Link></li>
                    <li className={styles.link}><Link to="/About" replace={true}>About</Link></li>
                    <li className={styles.link}><Link to="/FAQ">FAQ</Link></li>
                    <li className={`${styles.link}`} onClick={handleClick} >
                        Random
                        <svg width="22" height="17" viewBox="0 0 22 17" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M3.18519 14.452C5.27338 14.452 6.93828 13.6956 8.1799 12.1827C8.1799 12.0765 8.10935 11.9836 7.96826 11.904L7.16403 10.3911C6.79719 11.1077 6.25398 11.685 5.5344 12.123C4.81482 12.5609 4.03175 12.7799 3.18519 12.7799H1.11112C0.885368 12.7799 0.680783 12.8661 0.497361 13.0386C0.31394 13.2112 0.222229 13.4036 0.222229 13.6159C0.222229 13.8283 0.31394 14.0207 0.497361 14.1932C0.680783 14.3657 0.885368 14.452 1.11112 14.452H3.18519ZM18.9312 0.278689C18.4797 -0.0928962 18.0564 -0.0928962 17.6614 0.278689C17.2381 0.676815 17.2381 1.07494 17.6614 1.47307L18.8042 2.58782H15.291C13.231 2.58782 11.5803 3.34426 10.3386 4.85714C10.3386 4.93677 10.3951 5.02966 10.5079 5.13583L11.3122 6.64871C11.679 5.93208 12.2222 5.3548 12.9418 4.91686C13.6614 4.47892 14.4445 4.25995 15.291 4.25995H18.8042L17.6614 5.37471C17.2381 5.77283 17.2381 6.17096 17.6614 6.56909C17.8307 6.72834 18.0423 6.80796 18.2963 6.80796C18.4938 6.80796 18.7055 6.72834 18.9312 6.56909L21.6402 4.02108C22.0071 3.62295 22.0071 3.22482 21.6402 2.8267L18.9312 0.278689ZM18.9312 10.4707C18.4797 10.0991 18.0564 10.0991 17.6614 10.4707C17.2381 10.8689 17.2381 11.267 17.6614 11.6651L18.8042 12.7799H15.291C14.4445 12.7799 13.6543 12.5609 12.9206 12.123C12.187 11.685 11.6226 11.1077 11.2275 10.3911L10.254 8.51991L9.2381 6.64871L8.81482 5.89227C8.30689 4.88368 7.54498 4.0808 6.52911 3.48361C5.51323 2.88642 4.3986 2.58782 3.18519 2.58782H1.11112C0.885368 2.58782 0.680783 2.67408 0.497361 2.8466C0.31394 3.01913 0.222229 3.21155 0.222229 3.42389C0.222229 3.63622 0.31394 3.82865 0.497361 4.00117C0.680783 4.17369 0.885368 4.25995 1.11112 4.25995H3.18519C4.99119 4.25995 6.34569 5.05621 7.24868 6.64871L8.26456 8.51991L9.2381 10.3911L9.70371 11.1475C10.2681 12.1561 11.0512 12.959 12.0529 13.5562C13.0547 14.1534 14.1623 14.452 15.3757 14.452H18.9312L17.746 15.5667C17.3228 15.9649 17.3228 16.363 17.746 16.7611C17.9154 16.9204 18.127 17 18.381 17C18.6067 17 18.8184 16.9204 19.0159 16.7611L21.7249 14.2131C22.0917 13.815 22.0917 13.4169 21.7249 13.0187L18.9312 10.4707Z" fill="#131525"/>
                        </svg>
                    </li>
                </ul>
                <button className={styles.random} onClick={handleClick} >
                    Random
                    <svg width="22" height="17" viewBox="0 0 22 17" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M3.18519 14.452C5.27338 14.452 6.93828 13.6956 8.1799 12.1827C8.1799 12.0765 8.10935 11.9836 7.96826 11.904L7.16403 10.3911C6.79719 11.1077 6.25398 11.685 5.5344 12.123C4.81482 12.5609 4.03175 12.7799 3.18519 12.7799H1.11112C0.885368 12.7799 0.680783 12.8661 0.497361 13.0386C0.31394 13.2112 0.222229 13.4036 0.222229 13.6159C0.222229 13.8283 0.31394 14.0207 0.497361 14.1932C0.680783 14.3657 0.885368 14.452 1.11112 14.452H3.18519ZM18.9312 0.278689C18.4797 -0.0928962 18.0564 -0.0928962 17.6614 0.278689C17.2381 0.676815 17.2381 1.07494 17.6614 1.47307L18.8042 2.58782H15.291C13.231 2.58782 11.5803 3.34426 10.3386 4.85714C10.3386 4.93677 10.3951 5.02966 10.5079 5.13583L11.3122 6.64871C11.679 5.93208 12.2222 5.3548 12.9418 4.91686C13.6614 4.47892 14.4445 4.25995 15.291 4.25995H18.8042L17.6614 5.37471C17.2381 5.77283 17.2381 6.17096 17.6614 6.56909C17.8307 6.72834 18.0423 6.80796 18.2963 6.80796C18.4938 6.80796 18.7055 6.72834 18.9312 6.56909L21.6402 4.02108C22.0071 3.62295 22.0071 3.22482 21.6402 2.8267L18.9312 0.278689ZM18.9312 10.4707C18.4797 10.0991 18.0564 10.0991 17.6614 10.4707C17.2381 10.8689 17.2381 11.267 17.6614 11.6651L18.8042 12.7799H15.291C14.4445 12.7799 13.6543 12.5609 12.9206 12.123C12.187 11.685 11.6226 11.1077 11.2275 10.3911L10.254 8.51991L9.2381 6.64871L8.81482 5.89227C8.30689 4.88368 7.54498 4.0808 6.52911 3.48361C5.51323 2.88642 4.3986 2.58782 3.18519 2.58782H1.11112C0.885368 2.58782 0.680783 2.67408 0.497361 2.8466C0.31394 3.01913 0.222229 3.21155 0.222229 3.42389C0.222229 3.63622 0.31394 3.82865 0.497361 4.00117C0.680783 4.17369 0.885368 4.25995 1.11112 4.25995H3.18519C4.99119 4.25995 6.34569 5.05621 7.24868 6.64871L8.26456 8.51991L9.2381 10.3911L9.70371 11.1475C10.2681 12.1561 11.0512 12.959 12.0529 13.5562C13.0547 14.1534 14.1623 14.452 15.3757 14.452H18.9312L17.746 15.5667C17.3228 15.9649 17.3228 16.363 17.746 16.7611C17.9154 16.9204 18.127 17 18.381 17C18.6067 17 18.8184 16.9204 19.0159 16.7611L21.7249 14.2131C22.0917 13.815 22.0917 13.4169 21.7249 13.0187L18.9312 10.4707Z" fill="#131525"/>
                    </svg>
                </button>

            </div>
        </nav>
    )
}

export default Nav;